# Use the official Go image as a builder
FROM golang:1.22-alpine AS builder

# Set the working directory inside the container
WORKDIR /app

# Copy the go.mod and go.sum files first for dependency caching
COPY go.mod go.sum ./

# Download and cache Go module dependencies
RUN go mod tidy

# Copy the entire application code into the container
COPY . .

# Build the Go application (assuming main.go is the entry point)
RUN go build -o main .

# Use a smaller base image for the final image
FROM alpine:latest

# Set the working directory for the final image
WORKDIR /root/

# Copy the built binary from the builder stage
COPY --from=builder /app/main .

# Command to run the executable
CMD ["./main"]

# Expose the port if necessary (change 8080 to your application's port)
EXPOSE 8080
